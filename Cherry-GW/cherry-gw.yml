- hosts: cherry-gw
  vars:
      firewall: {
          remote: {
            conf: /var/lib/firewall,
            script:  /var/lib/firewall.cherry,
            dir: /var/lib/
            },
          local: {
            conf: files/firewall/firewall,
            script: files/firewall/firewall.cherry
          }
      }

  tasks:


    - name: Get remote MD5 for firewall-config
      tags: firewall
      stat: path={{ firewall.remote.conf }}
      register: fw_remote_firewall
    - name: Get remote MD5 for firewall script
      stat: path={{ firewall.remote.script }}
      register: fw_remote_firewall_cherry


    - name: Get local md5sum firewall-config
      tags: firewall
      local_action: stat path={{ firewall.local.conf }}
      register: fw_local_firewall
    - name: Get local md5sum firewall-config
      local_action: stat path={{ firewall.local.script }}
      register: fw_local_firewall_cherry


    - name: Copy "firewall" if md5sum no equal
      tags: firewall
      copy: src={{ firewall.local.conf }} dest={{ firewall.remote.dir }} owner=root group=root mode=644 backup=yes
      when: fw_local_firewall.stat.md5 != fw_remote_firewall.stat.md5
      become: yes

    - name: Copy if "firewall.cherry" checksum no equal
      tags: firewall
      copy: src={{ firewall.local.script }} dest={{ firewall.remote.dir }} owner=root group=root mode=744 backup=yes
      when: fw_local_firewall_cherry.stat.md5 != fw_remote_firewall_cherry.stat.md5
      become: yes


    - name: Copy "firewall.md5" if script modified
      tags: firewall
      copy: src=files/cherry-gw/firewall/firewall.md5 dest={{ firewall.remote.dir }} owner=root group=root mode=655
      when: fw_local_firewall_cherry.stat.md5 != fw_remote_firewall_cherry.stat.md5
      become: yes

    - name: Run firewall after copy file
      tags: firewall
      command: '/var/lib/firewall.cherry'
      when: fw_local_firewall_cherry.stat.md5 != fw_remote_firewall_cherry.stat.md5 or fw_local_firewall.stat.md5 != fw_remote_firewall.stat.md5
      become: yes
      register: out

    - name: Generate Cherry_VIP for squidGuard
      tags: squid
      template: src=templates/cherry_vip.j2 dest=/etc/squid3/cherry_vip backup=yes
      become: yes
      notify:
          - reload squid
      register: squid_conf

    #- name: Перезапуск Squid после изменения конфигурации
    #  tags: squid
    #  command: '/usr/sbin/squid3 -k reconfigure'
    #  when: squid_conf.changed
    #  become: yes

  handlers:
    - name: reload squid
      service: name=squid3 state=reloaded
      become: yes

#    - debug: var=out.stdout_lines
#    - debug: var=fw_conf_local
